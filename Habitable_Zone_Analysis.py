# -*- coding: utf-8 -*-
"""Untitled16.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Axw6898YcucaalYLUpbkGLlXxWx5DiU_
"""

# This is code to estimate the parameters for project Comparative Analysis of Habitable Zones of M-Dwarf Stars. The comment in each section provide the detail about the unites of parameters and equations.

# Step 1: Stellar Luminosity Calculation
import numpy as np

# Constants
sigma = 5.67e-8  # Stefan-Boltzmann constant in W/m^2/K^4
solar_radius = 6.955e8  # Solar radius in meters (m)
solar_luminosity = 3.828e26  # Solar luminosity in watts (W)

# Stellar parameters (example values for Proxima Centauri)
R_star = 0.14 * solar_radius  # Stellar radius in meters (m)
T_star = 3042  # Stellar effective temperature in Kelvin (K)

# Step 1: Calculate stellar luminosity (L_star) in watts (W)
L_star = 4 * np.pi * R_star**2 * sigma * T_star**4

# Convert to solar luminosities (L_star / L_sun)
L_star_in_solar_units = L_star / solar_luminosity

print(f"Stellar Luminosity: {L_star_in_solar_units:.4f} L_sun")


# Step 2: Calculate Inner and Outer Boundaries of the Habitable Zone


def habitable_zone_flux(T_eff):
    # Inner boundary of the habitable zone (runaway greenhouse)
    S_inner = 1.776 - 2.136e-4 * T_eff + 3.206e-9 * T_eff**2

    # Outer boundary of the habitable zone (maximum greenhouse)
    S_outer = 0.356 - 6.171e-5 * T_eff + 1.698e-9 * T_eff**2

    return S_inner, S_outer

# Example for Proxima Centauri's effective temperature
T_eff = T_star  # Stellar effective temperature in Kelvin (K)
S_inner, S_outer = habitable_zone_flux(T_eff)

print(f"Inner Flux Boundary: {S_inner:.4f} S_earth")
print(f"Outer Flux Boundary: {S_outer:.4f} S_earth")


# Step 3: Calculate the Distance to the Inner and Outer Boundaries of the Habitable Zone


def habitable_zone_distance(L_star, S_boundary):
    # Distance in AU (astronomical units)
    return np.sqrt(L_star / S_boundary)

# Calculate distances for inner and outer boundaries
R_inner = habitable_zone_distance(L_star_in_solar_units, S_inner)  # in AU
R_outer = habitable_zone_distance(L_star_in_solar_units, S_outer)  # in AU

print(f"Inner HZ Boundary: {R_inner:.4f} AU")
print(f"Outer HZ Boundary: {R_outer:.4f} AU")


# Step 4: Calculate Equilibrium Temperature of the Planet

# Planetary parameters
albedo = 0.3  # Albedo of the planet (dimensionless)
distance = 0.0485  # Orbital distance from the star in AU

# Function to calculate equilibrium temperature (assuming no atmosphere)
def equilibrium_temperature(L_star, distance, albedo):
    # Distance needs to be in meters (AU to meters conversion)
    AU_to_meters = 1.496e11  # 1 AU in meters
    d_meters = distance * AU_to_meters

    # Calculate equilibrium temperature
    T_eq = T_eff * np.sqrt(R_star / (2 * d_meters)) * (1 - albedo)**0.25
    return T_eq

# Calculate equilibrium temperature for Proxima Centauri b
T_eq = equilibrium_temperature(L_star_in_solar_units, distance, albedo)

print(f"Equilibrium Temperature: {T_eq:.2f} K")


# Step 5: Compare to Solar System


# Solar system HZ boundaries
solar_inner_HZ = 0.95  # in AU
solar_outer_HZ = 1.37  # in AU

# Comparison to Proxima Centauri's HZ
print(f"Proxima Centauri HZ Range: {R_inner:.2f} AU to {R_outer:.2f} AU")
print(f"Solar System HZ Range: {solar_inner_HZ} AU to {solar_outer_HZ} AU")